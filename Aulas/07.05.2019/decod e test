library ieee;
use ieee.std_logic_1164.all;


entity cd4511 is
port(abcd : in std_logic_vector (3 downto 0);
	n_LE,n_BL,n_LT : in std_logic;
	disp : out std_logic_vector(6 downto 0));
end cd4511;

architecture arq of cd4511 is
signal latches : std_logic_vector (3 downto 0) := "0000";
signal decoder: std_logic_vector (6 downto 0);
signal driver: std_logic_vector  (6 downto 0);
signal mode: std_logic := '1';
begin

latches <= abcd when n_LE = '0' else	
			latches;
					
			--ahcdefg
decoder <= "0000000" when n_BL = '0' else
			"1111110" when latches = "0000" else
			"0110000" when latches = "0001" else
			"1101101" when latches = "0010" else
			"1111001" when latches = "0011" else
			"0110011" when latches = "0100" else
			"1011011" when latches = "0101" else
			"1011111" when latches = "0110" else
			"1110000" when latches = "0111" else
			"1111111" when latches = "1000" else
			"1111011" when latches = "1001" else		
			"0000000";
			
driver <= "1111111" when n_LT = '0' else
			decoder;
			
laco: for i in 0 to 6 generate
		disp(i) <= driver(i) xor mode;
end generate;
		
			
end arq;
-------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity testbench is
end testbench;

architecture test of testbench is

component cd4511 is
port(abcd : in std_logic_vector (3 downto 0);
	n_LE,n_BL,n_LT : in std_logic;
	disp : out std_logic_vector(6 downto 0));
end component;

signal abcd :  std_logic_vector (3 downto 0);
signal n_LE,n_BL,n_LT :  std_logic;
signal	disp :  std_logic_vector(6 downto 0);
 
begin 

teste: cd4511 port map (abcd,n_LE,n_BL,n_LT,disp);

abcd <= "0101",
		 "0111" after 70 ns,
		 "1001" after 90 ns,
		 "0000" after 110 ns;
		 
n_BL <= '1',
		  '0' after 20 ns,
		  '1'after 30 ns;
n_LT <= '1',
		  '0' after 40 ns,
		  '1' after 50 ns;
n_LE <= '1',
		  '0' after 60 ns,
		  '1' after 75 ns;
end test;
