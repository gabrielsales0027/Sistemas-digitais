library ieee;
use ieee.std_logic_1164.all;
--Divisor
--A B entradas, A vai ser dividido por B
--Clock
--Reset/Start -  reiniciar e zerar o valor de acc(acumulador)
--Resto -- cout, o programa vai fazer A-B e o resto vai ser somado ao resultado que é um acumulador
--Resultado e ready( avisa que a divisão ja terminou)
-- tem que usar subnbits addnbits e add1b como component

entity div is
generic(size :integer :=8);
port(a,b:in std_logic_vector(size-1 downto 0);
	  clk,reset: in std_logic;
	  Resto,Resultado: out std_logic_vector(size-1 downto 0);
	  ready: out std_logic);
end div;

architecture arq of div is

component subnbits is
port(A,B : in std_logic_vector(7 downto 0);
	  M: in std_logic;
	  cout: out std_logic;
	  S : out std_logic_vector(7 downto 0));
end component;

signal acc,w,x: std_logic_vector(size-1 downto 0) := (others => '0');
signal temp_add,temp_sub,temp: std_logic_vector(size-1 downto 0);
signal add_c,sub_c,status:std_logic;

begin

temp <= (size-1 downto 1 => '0',0=>sub_c);
sub: subnbits port map(w,x,'1',sub_c,temp_sub);
adder: subnbits port map(acc,temp,'0',add_c,temp_add);
ready <= status;
resto <= w;
resultado <= acc;

process( reset,clk)

begin 
if (reset = '1') then 
	status <= '0';
	w <= a;
	x <= b;
	acc <= (others => '0');
elsif (clk'event and clk = '0') then	
	if (sub_c = '0') then
	w <= temp_sub;
	acc <= temp_add;
	else
	status <= '1';
end if;
end if;
end process;

end arq;

---------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity testbench is
end testbench;

architecture arq of testbench is

component div is
generic(size :integer :=8);
port(a,b:in std_logic_vector(size-1 downto 0);
	  clk,reset: in std_logic;
	  Resto,Resultado: out std_logic_vector(size-1 downto 0);
	  ready: out std_logic);
end component;

signal ready: std_logic ;
signal reset: std_logic := '0';
signal clk: std_logic := '1';
signal a: std_logic_vector(7 downto 0) :="00001010";
signal b: std_logic_vector(7 downto 0) :="00000010";
signal Resto,Resultado :std_logic_vector(7 downto 0);

begin

test: div port map (a,b,clk,reset,Resto,Resultado,ready);

process
begin
reset <='1';
wait for 10 ns;
reset <='0';


wait;
end process;
end arq;
